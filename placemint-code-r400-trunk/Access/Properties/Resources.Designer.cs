//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlaceMint.Access.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PlaceMint.Access.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The default applications settings are being used: {0}.
        /// </summary>
        internal static string appSettingsFileFailFormat {
            get {
                return ResourceManager.GetString("appSettingsFileFailFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlaceMint_settings.config.
        /// </summary>
        internal static string appSettingsFileName {
            get {
                return ResourceManager.GetString("appSettingsFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} of the regular expressions in your Regex list have invalid syntax. {1} removed from the displayed list.
        ///Select &quot;Edit Regex List&quot; for information on how to correct this error..
        /// </summary>
        internal static string configInvalidRegexFormat {
            get {
                return ResourceManager.GetString("configInvalidRegexFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the file to load the window group configuration.
        /// </summary>
        internal static string configLoadDialogTitle {
            get {
                return ResourceManager.GetString("configLoadDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No window groups were created because the supplied file path for the configuration file was too long..
        /// </summary>
        internal static string configPathTooLong {
            get {
                return ResourceManager.GetString("configPathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Configuration could not be loaded. {0}.
        /// </summary>
        internal static string configurationIllegalValueFormat {
            get {
                return ResourceManager.GetString("configurationIllegalValueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was at least one hotkey that was a duplicate of another hotkey..
        /// </summary>
        internal static string duplicateHotkeys {
            get {
                return ResourceManager.GetString("duplicateHotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any duplictes were removed.
        ///Please check your hotkey configuration to assigne unique hotkeys..
        /// </summary>
        internal static string duplicateHotkeysClear {
            get {
                return ResourceManager.GetString("duplicateHotkeysClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate Hotkey.
        /// </summary>
        internal static string duplicateHotkeysDialogTitle {
            get {
                return ResourceManager.GetString("duplicateHotkeysDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The regular expression has syntactical errors..
        /// </summary>
        internal static string editInvalidRegex {
            get {
                return ResourceManager.GetString("editInvalidRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied path does not point to a {0} file, so nothing was loaded. .
        /// </summary>
        internal static string emptyPathFormat {
            get {
                return ResourceManager.GetString("emptyPathFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Error.
        /// </summary>
        internal static string errorTitle {
            get {
                return ResourceManager.GetString("errorTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .config.
        /// </summary>
        internal static string FileDefaultExt {
            get {
                return ResourceManager.GetString("FileDefaultExt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Config files (*.config;*.xml)|*.config;*.xml|All files (*.*)|*.*.
        /// </summary>
        internal static string FileFilter {
            get {
                return ResourceManager.GetString("FileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration File Not Found.
        /// </summary>
        internal static string fileNotFoundDialogTitle {
            get {
                return ResourceManager.GetString("fileNotFoundDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to PlaceMint.
        ///
        ///If you have downloaded a regular expression list or a slot template list, please set their loction (Tools &gt; Options).
        ///You can make your first setup by bringing up the configuration window (Tools &gt; Configure)..
        /// </summary>
        internal static string firstRun {
            get {
                return ResourceManager.GetString("firstRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Regular Expression List has not been set yet.
        ///You must download one one from the project website or make your own expressions before PlaceMint will match windows..
        /// </summary>
        internal static string firstRunRegex {
            get {
                return ResourceManager.GetString("firstRunRegex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Slot Template List has not been set yet.
        ///You will still be able to configure your setup, but you will not be able to set slot sizes based on known default window sizes..
        /// </summary>
        internal static string firstRunSlotTemplate {
            get {
                return ResourceManager.GetString("firstRunSlotTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This name is already used by another group, please pick a unique title..
        /// </summary>
        internal static string groupNameAlreadyExists {
            get {
                return ResourceManager.GetString("groupNameAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported command line arguments:
        ///  /? - Show this help
        ///  /debug - Force logging level to debug. Ignored if used with trace argument
        ///  /nwd - Do not force the programs working directory to containing the exe
        /// /pause - Force program to be initially paused
        ///  /trace - Force logging level to trace.
        /// </summary>
        internal static string help {
            get {
                return ResourceManager.GetString("help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to http://sourceforge.net/apps/mediawiki/placemint/.
        /// </summary>
        internal static string helpUrl {
            get {
                return ResourceManager.GetString("helpUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This hotkey is already assigned, please pick a unique hotkey..
        /// </summary>
        internal static string hotkeyAlreadyExists {
            get {
                return ResourceManager.GetString("hotkeyAlreadyExists", resourceCulture);
            }
        }
        
        internal static System.Drawing.Icon icon {
            get {
                object obj = ResourceManager.GetObject("icon", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        internal static System.Drawing.Icon icon_paused {
            get {
                object obj = ResourceManager.GetObject("icon_paused", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch statement not intended to reach default option..
        /// </summary>
        internal static string illegalFallThrough {
            get {
                return ResourceManager.GetString("illegalFallThrough", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} can only be triggered by {1}..
        /// </summary>
        internal static string illegalSenderFormat {
            get {
                return ResourceManager.GetString("illegalSenderFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must not be {0} than {1}..
        /// </summary>
        internal static string intSizeFailFormat {
            get {
                return ResourceManager.GetString("intSizeFailFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be an integer..
        /// </summary>
        internal static string intValidationFail {
            get {
                return ResourceManager.GetString("intValidationFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid regular expression: {0}.
        /// </summary>
        internal static string invalidRegexFormat {
            get {
                return ResourceManager.GetString("invalidRegexFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration could not be loaded because a group  has an invalid regular expression: {0}.
        /// </summary>
        internal static string invalidRegexLoadedFormat {
            get {
                return ResourceManager.GetString("invalidRegexLoadedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlaceMint v{0} .
        /// </summary>
        internal static string mainGUITitle {
            get {
                return ResourceManager.GetString("mainGUITitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  (Paused).
        /// </summary>
        internal static string paused {
            get {
                return ResourceManager.GetString("paused", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlaceMint: {0} .
        /// </summary>
        internal static string placeMintPreFormat {
            get {
                return ResourceManager.GetString("placeMintPreFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; was not found, therefore the Regex list could not be initialized.
        ///To add a regular exprestion to the Regex list, select &quot;Edit Regex List&quot;..
        /// </summary>
        internal static string regexListFileNotFound {
            get {
                return ResourceManager.GetString("regexListFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Regex List could not be loaded. {0}.
        /// </summary>
        internal static string regexListIllegalValueFormat {
            get {
                return ResourceManager.GetString("regexListIllegalValueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the file to load the Regex list.
        /// </summary>
        internal static string regexListLoadDialogTitle {
            get {
                return ResourceManager.GetString("regexListLoadDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; was not properly formated for a Regex List. Please verify the file and try again..
        /// </summary>
        internal static string regexListloadFailureFormat {
            get {
                return ResourceManager.GetString("regexListloadFailureFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; could not be loaded because the path was too long, therefore the Regex list could not be initialized..
        /// </summary>
        internal static string regexListPathTooLong {
            get {
                return ResourceManager.GetString("regexListPathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expressions used by the group(s) were cleared and the configuration was saved..
        /// </summary>
        internal static string regexReuseLoadPost {
            get {
                return ResourceManager.GetString("regexReuseLoadPost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following group(s) were using the same combination of regular expressions:
        ///.
        /// </summary>
        internal static string regexReusePre {
            get {
                return ResourceManager.GetString("regexReusePre", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit the selected regular expressions so that none of the groups are using the same combination of expressions..
        /// </summary>
        internal static string regexReuseSavePost {
            get {
                return ResourceManager.GetString("regexReuseSavePost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This title is already being used by another regular expression, please pick a unique title..
        /// </summary>
        internal static string regexTitleInUse {
            get {
                return ResourceManager.GetString("regexTitleInUse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} not found in the Regex list. {1} added to the list..
        /// </summary>
        internal static string regexTitleNotFound {
            get {
                return ResourceManager.GetString("regexTitleNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save canceled because {0} was not validated.
        /// </summary>
        internal static string saveCanceledFormat {
            get {
                return ResourceManager.GetString("saveCanceledFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration was not saved because there was at least one hotkey that dupicated the definintion of another hotkey..
        /// </summary>
        internal static string saveCancelHotkeys {
            get {
                return ResourceManager.GetString("saveCancelHotkeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration was not saved because there was at least two slots from one windowgroup that shared the same size and location..
        /// </summary>
        internal static string saveCancelSlots {
            get {
                return ResourceManager.GetString("saveCancelSlots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select save location for the window group configuration..
        /// </summary>
        internal static string saveDialogTitle {
            get {
                return ResourceManager.GetString("saveDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Slot Template List could not be loaded. {0}.
        /// </summary>
        internal static string slotTemplateIllegalValueFormat {
            get {
                return ResourceManager.GetString("slotTemplateIllegalValueFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the file to load the Slot Template list.
        /// </summary>
        internal static string slotTemplateListLoadDialogTitle {
            get {
                return ResourceManager.GetString("slotTemplateListLoadDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; was not found, therefore the Slot Template list could not be initialized for the sample slots..
        /// </summary>
        internal static string slotTemplateListNotFoundFormat {
            get {
                return ResourceManager.GetString("slotTemplateListNotFoundFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; could not be loaded because the path was too long, therefore the Slot Template list could not be initialized for the sample slots..
        /// </summary>
        internal static string slotTemplatePathTooLong {
            get {
                return ResourceManager.GetString("slotTemplatePathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This title is already being used by another slot template, please pick a unique title..
        /// </summary>
        internal static string slotTemplateTitleInUse {
            get {
                return ResourceManager.GetString("slotTemplateTitleInUse", resourceCulture);
            }
        }
        
        internal static System.Drawing.Bitmap upArrow {
            get {
                object obj = ResourceManager.GetObject("upArrow", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected file was not properly formated for a window group. Please verify the file and try again..
        /// </summary>
        internal static string windowGroupLoadFormatFailure {
            get {
                return ResourceManager.GetString("windowGroupLoadFormatFailure", resourceCulture);
            }
        }
    }
}
